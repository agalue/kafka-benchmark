---
services:

  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    hostname: zookeeper
    environment:
    - TZ=America/New_York
    - ZOO_MY_ID=1
    - ZOO_SERVERS=server.1=zookeeper:2888:3888;2181
    - ZOO_STANDALONE_ENABLED=true
    - ZOO_4LW_COMMANDS_WHITELIST=*
    healthcheck:
      test: echo stat | nc zookeeper 2181
      interval: 30s
      timeout: 5s
      retries: 3

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: kafka
    hostname: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
    - TZ=America/New_York
    - KAFKA_BROKER_ID=1
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    - KAFKA_LISTENERS=PLAINTEXT://:9092
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181/kafka
    - KAFKA_NUM_PARTITIONS=${KAFKA_PARTITIONS:-10}
    - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    - KAFKA_DEFAULT_REPLICATION_FACTOR=1
    - KAFKA_MIN_INSYNC_REPLICAS=1
    - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    - KAFKA_DELETE_TOPIC_ENABLE=true
    - KAFKA_CONTROLLED_SHUTDOWN_ENABLE=true
    - KAFKA_HEAP_OPTS=-Xms${KAFKA_HEAP:-4g} -Xmx${KAFKA_HEAP:-4g}
    healthcheck:
      test: nc -z localhost 9092
      interval: 30s
      timeout: 5s
      retries: 3

  manager:
    image: hlebalbau/kafka-manager:stable
    container_name: manager
    hostname: manager
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
    - 9000:9000
    environment:
    - TZ=America/New_York
    - ZK_HOSTS=zookeeper:2181
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9000 || exit 1
      interval: 1m
      timeout: 5s
      retries: 3

  producer:
    image: agalue/kafka-benchmark-producer
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.producer
    container_name: producer
    hostname: producer
    depends_on:
      kafka:
        condition: service_healthy
    command:
      - -b
      - kafka:9092
      - -p
      - '8180'
      - -r
      - '${PRODUCER_RATE:-1000}'
      - -w
      - '${PRODUCER_WORKERS:-10}'
    ports:
    - 8180:8180
    environment:
    - TZ=America/New_York
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8180 || exit 1
      interval: 1m
      timeout: 5s
      retries: 3

  consumer:
    image: agalue/kafka-benchmark-consumer
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.consumer
    container_name: consumer
    hostname: consumer
    depends_on:
      kafka:
        condition: service_healthy
    command:
    - -b
    - kafka:9092
    - -p
    - '8181'
    - -w
    - '${CONSUMER_WORKERS:-10}'
    ports:
    - 8181:8181
    environment:
    - TZ=America/New_York
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8181 || exit 1
      interval: 1m
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    depends_on:
      producer:
        condition: service_healthy
      consumer:
        condition: service_healthy
    ports:
    - 9090:9090
    environment:
    - TZ=America/New_York
    volumes:
    - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9090 || exit 1
      interval: 1m
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    depends_on:
      prometheus:
        condition: service_healthy
    ports:
    - 3000:3000
    environment:
    - TZ=America/New_York
    volumes:
    - ./config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    - ./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    - ./config/grafana/dashboards/:/var/lib/grafana/dashboards/
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:3000 || exit 1
      interval: 1m
      timeout: 5s
      retries: 3
